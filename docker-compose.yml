version: "3.3"
services:
  traefik:
    image: traefik:1.5
    ports:
      - 80:80
      - 8080:8080
    networks:
      - traefik-net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    configs:
      - source: traefik-config
        target: /etc/traefik/traefik.toml
    deploy:
      placement:
        constraints: [node.role == manager]

  blog:
    image: yubing/blog:v0.1
    configs:
      - source: hexo-config
        target: /app/_config.yml
      - source: icarus_theme_config
        target: /app/themes/icarus/_config.yml
    deploy:
      replicas: 2
      restart_policy:
        condition: on-failure
      labels:
          - "traefik.port=4000"
          - "traefik.backend=hexo"
          - "traefik.frontend.rule=Host:www.cyub.vip"
          - "traefik.backend.loadbalancer.sticky=true"
          - "traefik.frontend.passHostHeader=true"

    networks:
      - traefik-net

  nginx:
    image: nginx:alpine
    volumes:
      - ./conf.d:/etc/nginx/conf.d
      - ./www:/var/www
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
      labels:
          - "traefik.port=80"
          - "traefik.backend=nginx"
          - "traefik.frontend.rule=Host:doc.cyub.vip,static.cyub.vip"
          - "traefik.backend.loadbalancer.sticky=true"
          - "traefik.frontend.passHostHeader=true"
    networks:
      - traefik-net

  visualizer:
    image: dockersamples/visualizer:stable
    ports:
      - "18888:8080"
    volumes:
       - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
        - traefik-net

networks:
  traefik-net:
    driver: overlay

configs:
  traefik-config:
    file: config.toml
  hexo-config:
    file: hexo_config.yml
  icarus_theme_config:
    file: icarus_theme_config.yml